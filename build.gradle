buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.0'
        classpath 'com.google.gms:google-services:3.0.0'
    }
}
apply plugin: 'com.android.application'

Properties props = new Properties()
props.load(new FileInputStream("keystore/keystore.properties"))

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile 'com.android.support:support-v4:25.3.0'
    compile 'com.android.support:recyclerview-v7:25.3.0'
    compile 'net.hockeyapp.android:HockeySDK:4.0.0'
    compile 'com.android.support:appcompat-v7:25.3.0'
    compile 'com.android.support:design:25.3.0'
    compile ('com.github.bumptech.glide:glide:3.7.0'){  exclude module: 'support-v4' }

    compile project(':FFmpegAndroid')
    compile ("de.mrmaffen:vlc-android-sdk:2.0.6")
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.moshi:moshi:1.4.0'
    compile 'com.squareup.retrofit2:converter-moshi:2.2.0'

}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.0'
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 21
        manifestPlaceholders = [HOCKEYAPP_APP_ID: "7b6e4f255f0b4d81bfff4a6b94737b23"]
    }
    lintOptions{
        abortOnError false
    }
    signingConfigs {
        release {
            storeFile file(props.MEDIAPLAYER_KEY_STORE_PATH)
            storePassword props.STORE_PASSWORD
            keyAlias props.KEY_STORE_ALIAS
            keyPassword props.KEY_STORE_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            FileCollection proGuardFileCollection = files { file('../proguard_config').listFiles() }
            proGuardFileCollection.each {File file ->
                println file.name
            }
            proguardFiles fileTree(dir: 'proguard_config', include: ['*.*']).asList().toArray()
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
        }
    }

    productFlavors {
        stage{
            applicationId 'com.mediaplayer.stage'
        }

        production{
            applicationId 'com.mediaplayer.production'
        }
    }
    repositories {
        mavenCentral()
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    splits{
        abi {

            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86, armeabi-v7a, and mips.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "x86", "armeabi-v7a", "mips", "x86_64"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk false
        }
    }

}


ext {
    compileSdkVersion = 25
    buildToolsVersion = '22.0.1'
    targetSdkVersion = 22
    minSdkVersion = 16
    versionCode = 28
    versionName = "0.3.2"
}
apply plugin: 'com.google.gms.google-services'
